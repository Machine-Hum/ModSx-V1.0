
8BitLFO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000672  00000706  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000672  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000104  00800100  00800100  00000706  2**0
                  ALLOC
  3 .stab         00002370  00000000  00000000  00000708  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000009b1  00000000  00000000  00002a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00003429  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000050  00000000  00000000  00003458  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000329  00000000  00000000  000034a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000001c0  00000000  00000000  000037d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000023e  00000000  00000000  00003991  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000e4  00000000  00000000  00003bd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000146  00000000  00000000  00003cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000001b7  00000000  00000000  00003dfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000040  00000000  00000000  00003fb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	28 c0       	rjmp	.+80     	; 0x52 <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	5c c0       	rjmp	.+184    	; 0xd0 <__vector_11>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>
  26:	25 c0       	rjmp	.+74     	; 0x72 <__bad_interrupt>
  28:	24 c0       	rjmp	.+72     	; 0x72 <__bad_interrupt>
  2a:	23 c0       	rjmp	.+70     	; 0x72 <__bad_interrupt>
  2c:	22 c0       	rjmp	.+68     	; 0x72 <__bad_interrupt>
  2e:	21 c0       	rjmp	.+66     	; 0x72 <__bad_interrupt>
  30:	20 c0       	rjmp	.+64     	; 0x72 <__bad_interrupt>
  32:	1f c0       	rjmp	.+62     	; 0x72 <__bad_interrupt>
  34:	05 a8       	ldd	r0, Z+53	; 0x35
  36:	4c cd       	rjmp	.-1384   	; 0xfffffad0 <__eeprom_end+0xff7efad0>
  38:	b2 d4       	rcall	.+2404   	; 0x99e <_etext+0x32c>
  3a:	4e b9       	out	0x0e, r20	; 14
  3c:	38 36       	cpi	r19, 0x68	; 104
  3e:	a9 02       	muls	r26, r25
  40:	0c 50       	subi	r16, 0x0C	; 12
  42:	b9 91       	ld	r27, Y+
  44:	86 88       	ldd	r8, Z+22	; 0x16
  46:	08 3c       	cpi	r16, 0xC8	; 200
  48:	a6 aa       	std	Z+54, r10	; 0x36
  4a:	aa 2a       	or	r10, r26
  4c:	be 00       	.word	0x00be	; ????
  4e:	00 00       	nop
  50:	80 3f       	cpi	r24, 0xF0	; 240

00000052 <__ctors_end>:
  52:	11 24       	eor	r1, r1
  54:	1f be       	out	0x3f, r1	; 63
  56:	cf ef       	ldi	r28, 0xFF	; 255
  58:	d4 e0       	ldi	r29, 0x04	; 4
  5a:	de bf       	out	0x3e, r29	; 62
  5c:	cd bf       	out	0x3d, r28	; 61

0000005e <__do_clear_bss>:
  5e:	22 e0       	ldi	r18, 0x02	; 2
  60:	a0 e0       	ldi	r26, 0x00	; 0
  62:	b1 e0       	ldi	r27, 0x01	; 1
  64:	01 c0       	rjmp	.+2      	; 0x68 <.do_clear_bss_start>

00000066 <.do_clear_bss_loop>:
  66:	1d 92       	st	X+, r1

00000068 <.do_clear_bss_start>:
  68:	a4 30       	cpi	r26, 0x04	; 4
  6a:	b2 07       	cpc	r27, r18
  6c:	e1 f7       	brne	.-8      	; 0x66 <.do_clear_bss_loop>
  6e:	bf d0       	rcall	.+382    	; 0x1ee <main>
  70:	fe c2       	rjmp	.+1532   	; 0x66e <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <fill>:
	
	PORTD |= (1<<LED);
}

void fill(void)
{
  74:	1f 93       	push	r17
  76:	cf 93       	push	r28
  78:	df 93       	push	r29
	double temp;
	Pointer = 0;
  7a:	10 e0       	ldi	r17, 0x00	; 0
	
	temp = (2*PI)/256;
	
	do
	{
		SinW[Pointer] = (int) (((sin(temp*Pointer))*0x7f)+0x7f);
  7c:	c1 2f       	mov	r28, r17
  7e:	d0 e0       	ldi	r29, 0x00	; 0
  80:	be 01       	movw	r22, r28
  82:	88 27       	eor	r24, r24
  84:	77 fd       	sbrc	r23, 7
  86:	80 95       	com	r24
  88:	98 2f       	mov	r25, r24
  8a:	7f d1       	rcall	.+766    	; 0x38a <__floatsisf>
  8c:	2a ed       	ldi	r18, 0xDA	; 218
  8e:	3f e0       	ldi	r19, 0x0F	; 15
  90:	49 ec       	ldi	r20, 0xC9	; 201
  92:	5c e3       	ldi	r21, 0x3C	; 60
  94:	06 d2       	rcall	.+1036   	; 0x4a2 <__mulsf3>
  96:	68 d2       	rcall	.+1232   	; 0x568 <sin>
  98:	cd 5f       	subi	r28, 0xFD	; 253
  9a:	de 4f       	sbci	r29, 0xFE	; 254
  9c:	20 e0       	ldi	r18, 0x00	; 0
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	4e ef       	ldi	r20, 0xFE	; 254
  a2:	52 e4       	ldi	r21, 0x42	; 66
  a4:	fe d1       	rcall	.+1020   	; 0x4a2 <__mulsf3>
  a6:	20 e0       	ldi	r18, 0x00	; 0
  a8:	30 e0       	ldi	r19, 0x00	; 0
  aa:	4e ef       	ldi	r20, 0xFE	; 254
  ac:	52 e4       	ldi	r21, 0x42	; 66
  ae:	d6 d0       	rcall	.+428    	; 0x25c <__addsf3>
  b0:	39 d1       	rcall	.+626    	; 0x324 <__fixsfsi>
  b2:	68 83       	st	Y, r22
  b4:	1f 5f       	subi	r17, 0xFF	; 255
		Pointer++;
		
	}while(Pointer < 255);
  b6:	1f 3f       	cpi	r17, 0xFF	; 255
  b8:	09 f7       	brne	.-62     	; 0x7c <fill+0x8>
	
	SinW[255] = 127; //Quick and Dirty
  ba:	8f e7       	ldi	r24, 0x7F	; 127
  bc:	80 93 02 02 	sts	0x0202, r24
	
	Pointer = 0;
  c0:	10 92 03 02 	sts	0x0203, r1
	//Not yet
}
  c4:	df 91       	pop	r29
  c6:	cf 91       	pop	r28
  c8:	1f 91       	pop	r17
  ca:	08 95       	ret

000000cc <set_8>:

//Set PWM DUC of output PD6 (0x00 to 0xFF)
void set_8(uint8_t data)
{
	OCR0A = data;
  cc:	87 bd       	out	0x27, r24	; 39
  ce:	08 95       	ret

000000d0 <__vector_11>:
void set_8(uint8_t);
void set_16(uint16_t);
void delay(uint16_t);

ISR(TIMER1_COMPA_vect)
{
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	2f 93       	push	r18
  dc:	3f 93       	push	r19
  de:	4f 93       	push	r20
  e0:	5f 93       	push	r21
  e2:	6f 93       	push	r22
  e4:	7f 93       	push	r23
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	af 93       	push	r26
  ec:	bf 93       	push	r27
  ee:	ef 93       	push	r30
  f0:	ff 93       	push	r31
	cli(); // Don't do it
  f2:	f8 94       	cli
	
	TCNT1H = 0; //Kill the timer
  f4:	10 92 85 00 	sts	0x0085, r1
	TCNT1L = 0;
  f8:	10 92 84 00 	sts	0x0084, r1
	
	Pointer++; //Pointer up PLX
  fc:	80 91 03 02 	lds	r24, 0x0203
 100:	8f 5f       	subi	r24, 0xFF	; 255
 102:	80 93 03 02 	sts	0x0203, r24
	
	//Saw Tooth
	if(WaveForm == SAW)
 106:	90 91 02 01 	lds	r25, 0x0102
 10a:	91 30       	cpi	r25, 0x01	; 1
 10c:	11 f4       	brne	.+4      	; 0x112 <__vector_11+0x42>
		set_8(Pointer);
 10e:	de df       	rcall	.-68     	; 0xcc <set_8>
 110:	18 c0       	rjmp	.+48     	; 0x142 <__vector_11+0x72>
	
	//Triangle
	else if(WaveForm == TRI) 
 112:	92 30       	cpi	r25, 0x02	; 2
 114:	81 f4       	brne	.+32     	; 0x136 <__vector_11+0x66>
	{
		if(Pointer < 0x7F)
 116:	8f 37       	cpi	r24, 0x7F	; 127
 118:	18 f4       	brcc	.+6      	; 0x120 <__vector_11+0x50>
			set_8(Pointer*2);
 11a:	88 0f       	add	r24, r24
 11c:	d7 df       	rcall	.-82     	; 0xcc <set_8>
 11e:	11 c0       	rjmp	.+34     	; 0x142 <__vector_11+0x72>
		
		else if(Pointer > 0x7F)
 120:	88 23       	and	r24, r24
 122:	7c f4       	brge	.+30     	; 0x142 <__vector_11+0x72>
			set_8((0xFF - Pointer)*2);
 124:	2f ef       	ldi	r18, 0xFF	; 255
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	a9 01       	movw	r20, r18
 12a:	48 1b       	sub	r20, r24
 12c:	51 09       	sbc	r21, r1
 12e:	ca 01       	movw	r24, r20
 130:	88 0f       	add	r24, r24
 132:	cc df       	rcall	.-104    	; 0xcc <set_8>
 134:	06 c0       	rjmp	.+12     	; 0x142 <__vector_11+0x72>
	}
	else //WaveForm == SIN
		set_8(SinW[Pointer]);
 136:	e8 2f       	mov	r30, r24
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	ed 5f       	subi	r30, 0xFD	; 253
 13c:	fe 4f       	sbci	r31, 0xFE	; 254
 13e:	80 81       	ld	r24, Z
 140:	c5 df       	rcall	.-118    	; 0xcc <set_8>
	
	
	//set_8(126);
		
	sei(); //Over
 142:	78 94       	sei
}
 144:	ff 91       	pop	r31
 146:	ef 91       	pop	r30
 148:	bf 91       	pop	r27
 14a:	af 91       	pop	r26
 14c:	9f 91       	pop	r25
 14e:	8f 91       	pop	r24
 150:	7f 91       	pop	r23
 152:	6f 91       	pop	r22
 154:	5f 91       	pop	r21
 156:	4f 91       	pop	r20
 158:	3f 91       	pop	r19
 15a:	2f 91       	pop	r18
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <set_16>:
}

//Set PWM DUC of output PD6 (0x00 to 0xFF)
void set_16(uint16_t data)
{
	OCR1AH = ((data & 0xFF00) >> 8);
 166:	90 93 89 00 	sts	0x0089, r25
	OCR1AL = (data & 0x00FF);
 16a:	80 93 88 00 	sts	0x0088, r24
 16e:	08 95       	ret

00000170 <delay>:
}


void delay(uint16_t time_ms)
{
	while (time_ms != 0)
 170:	00 97       	sbiw	r24, 0x00	; 0
 172:	41 f0       	breq	.+16     	; 0x184 <delay+0x14>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 174:	ef ec       	ldi	r30, 0xCF	; 207
 176:	f7 e0       	ldi	r31, 0x07	; 7
 178:	31 97       	sbiw	r30, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <delay+0x8>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <delay+0xe>
 17e:	00 00       	nop
	{
		_delay_ms(1);
		time_ms--;
 180:	01 97       	sbiw	r24, 0x01	; 1
}


void delay(uint16_t time_ms)
{
	while (time_ms != 0)
 182:	c1 f7       	brne	.-16     	; 0x174 <delay+0x4>
 184:	08 95       	ret

00000186 <init>:
		//nop
	}
}

void init(void)
{
 186:	cf 93       	push	r28
	DDRD |= (1 << PD6) | (1 << LED); // OC0A output	
 188:	8a b1       	in	r24, 0x0a	; 10
 18a:	84 64       	ori	r24, 0x44	; 68
 18c:	8a b9       	out	0x0a, r24	; 10
	DDRC &= (0b11110000); // Lower 4 are inputs
 18e:	87 b1       	in	r24, 0x07	; 7
 190:	80 7f       	andi	r24, 0xF0	; 240
 192:	87 b9       	out	0x07, r24	; 7
	
	PORTC |= (0b00001110);
 194:	88 b1       	in	r24, 0x08	; 8
 196:	8e 60       	ori	r24, 0x0E	; 14
 198:	88 b9       	out	0x08, r24	; 8
	
	//8Bit PWM stuff
	TCCR0A = 0b10000011; 
 19a:	83 e8       	ldi	r24, 0x83	; 131
 19c:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0b00000001; //8Mhz
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	85 bd       	out	0x25, r24	; 37
	
	//16Bit Interupt Source
	TCCR1A = 0b00000000;
 1a2:	10 92 80 00 	sts	0x0080, r1
	TCCR1B = 0b00000001; //8MHz Clock
 1a6:	80 93 81 00 	sts	0x0081, r24
	TIMSK1 = 0b00000010;
 1aa:	82 e0       	ldi	r24, 0x02	; 2
 1ac:	80 93 6f 00 	sts	0x006F, r24

	//ADC
	ADMUX = 0b01100000;
 1b0:	80 e6       	ldi	r24, 0x60	; 96
 1b2:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = 0b10100000; //Enable ADC | AutoTrigger
 1b6:	80 ea       	ldi	r24, 0xA0	; 160
 1b8:	80 93 7a 00 	sts	0x007A, r24
	ADCSRB &= 0b01000000; //FreeRunning
 1bc:	eb e7       	ldi	r30, 0x7B	; 123
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	80 74       	andi	r24, 0x40	; 64
 1c4:	80 83       	st	Z, r24
	DIDR0 |= (1 >> ADC0D);
 1c6:	ee e7       	ldi	r30, 0x7E	; 126
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	81 60       	ori	r24, 0x01	; 1
 1ce:	80 83       	st	Z, r24
	
	//NOW I'M ALIVE
	uint8_t dex = 100;
 1d0:	c4 e6       	ldi	r28, 0x64	; 100
	
	while(dex != 0)
	{
		dex = (dex - 10);
 1d2:	ca 50       	subi	r28, 0x0A	; 10
		PORTD |= (1<<LED);
 1d4:	5a 9a       	sbi	0x0b, 2	; 11
		delay(dex);
 1d6:	8c 2f       	mov	r24, r28
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	ca df       	rcall	.-108    	; 0x170 <delay>
		PORTD &= ~(1<<LED);
 1dc:	5a 98       	cbi	0x0b, 2	; 11
		delay(dex);
 1de:	8c 2f       	mov	r24, r28
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	c6 df       	rcall	.-116    	; 0x170 <delay>
	DIDR0 |= (1 >> ADC0D);
	
	//NOW I'M ALIVE
	uint8_t dex = 100;
	
	while(dex != 0)
 1e4:	c1 11       	cpse	r28, r1
 1e6:	f5 cf       	rjmp	.-22     	; 0x1d2 <init+0x4c>
		delay(dex);
		PORTD &= ~(1<<LED);
		delay(dex);
	}
	
	PORTD |= (1<<LED);
 1e8:	5a 9a       	sbi	0x0b, 2	; 11
}
 1ea:	cf 91       	pop	r28
 1ec:	08 95       	ret

000001ee <main>:
	sei(); //Over
}

int main(void)
{
	Pointer = 0;
 1ee:	10 92 03 02 	sts	0x0203, r1
	
	cli(); //Disable interrupts for now plx
 1f2:	f8 94       	cli
	
	init();
 1f4:	c8 df       	rcall	.-112    	; 0x186 <init>
	fill();
 1f6:	3e df       	rcall	.-388    	; 0x74 <fill>
	
	sei(); //Enable interrupts
 1f8:	78 94       	sei

	ADCSRA |= (1 << ADSC); //Start first Analog read
 1fa:	ea e7       	ldi	r30, 0x7A	; 122
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	80 64       	ori	r24, 0x40	; 64
 202:	80 83       	st	Z, r24

    while(1)
	{
		if((ADCSRA >> ADIF) & 1) //if there's a reading...
 204:	ca e7       	ldi	r28, 0x7A	; 122
 206:	d0 e0       	ldi	r29, 0x00	; 0
			{
				
				set_16((ADCH*(-119)) + 31254); //Set Deal
 208:	09 e7       	ldi	r16, 0x79	; 121
 20a:	10 e0       	ldi	r17, 0x00	; 0
			_delay_ms(10); // Let it tick a little
			
			if(~(PINC >> PC1) & 1)
				WaveForm = SAW;
			else if(~(PINC >> PC2) & 1)
				WaveForm = TRI;
 20c:	68 94       	set
 20e:	ee 24       	eor	r14, r14
 210:	e1 f8       	bld	r14, 1
				
			}
			_delay_ms(10); // Let it tick a little
			
			if(~(PINC >> PC1) & 1)
				WaveForm = SAW;
 212:	ff 24       	eor	r15, r15
 214:	f3 94       	inc	r15

	ADCSRA |= (1 << ADSC); //Start first Analog read

    while(1)
	{
		if((ADCSRA >> ADIF) & 1) //if there's a reading...
 216:	88 81       	ld	r24, Y
 218:	84 ff       	sbrs	r24, 4
 21a:	0c c0       	rjmp	.+24     	; 0x234 <main+0x46>
			{
				
				set_16((ADCH*(-119)) + 31254); //Set Deal
 21c:	f8 01       	movw	r30, r16
 21e:	20 81       	ld	r18, Z
 220:	39 e8       	ldi	r19, 0x89	; 137
 222:	32 03       	mulsu	r19, r18
 224:	c0 01       	movw	r24, r0
 226:	11 24       	eor	r1, r1
 228:	8a 5e       	subi	r24, 0xEA	; 234
 22a:	95 48       	sbci	r25, 0x85	; 133
 22c:	9c df       	rcall	.-200    	; 0x166 <set_16>
				ADCSRA |= (1 << ADIF); //READ THIS SCALEING THING
 22e:	88 81       	ld	r24, Y
 230:	80 61       	ori	r24, 0x10	; 16
 232:	88 83       	st	Y, r24
 234:	8f e1       	ldi	r24, 0x1F	; 31
 236:	9e e4       	ldi	r25, 0x4E	; 78
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x4a>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <main+0x50>
 23e:	00 00       	nop
				
			}
			_delay_ms(10); // Let it tick a little
			
			if(~(PINC >> PC1) & 1)
 240:	31 99       	sbic	0x06, 1	; 6
 242:	03 c0       	rjmp	.+6      	; 0x24a <main+0x5c>
				WaveForm = SAW;
 244:	f0 92 02 01 	sts	0x0102, r15
 248:	e6 cf       	rjmp	.-52     	; 0x216 <main+0x28>
			else if(~(PINC >> PC2) & 1)
 24a:	32 99       	sbic	0x06, 2	; 6
 24c:	03 c0       	rjmp	.+6      	; 0x254 <main+0x66>
				WaveForm = TRI;
 24e:	e0 92 02 01 	sts	0x0102, r14
 252:	e1 cf       	rjmp	.-62     	; 0x216 <main+0x28>
			else
				WaveForm = SIN;
 254:	10 92 02 01 	sts	0x0102, r1
 258:	de cf       	rjmp	.-68     	; 0x216 <main+0x28>

0000025a <__subsf3>:
 25a:	50 58       	subi	r21, 0x80	; 128

0000025c <__addsf3>:
 25c:	bb 27       	eor	r27, r27
 25e:	aa 27       	eor	r26, r26
 260:	0e d0       	rcall	.+28     	; 0x27e <__addsf3x>
 262:	e5 c0       	rjmp	.+458    	; 0x42e <__fp_round>
 264:	d6 d0       	rcall	.+428    	; 0x412 <__fp_pscA>
 266:	30 f0       	brcs	.+12     	; 0x274 <__addsf3+0x18>
 268:	db d0       	rcall	.+438    	; 0x420 <__fp_pscB>
 26a:	20 f0       	brcs	.+8      	; 0x274 <__addsf3+0x18>
 26c:	31 f4       	brne	.+12     	; 0x27a <__addsf3+0x1e>
 26e:	9f 3f       	cpi	r25, 0xFF	; 255
 270:	11 f4       	brne	.+4      	; 0x276 <__addsf3+0x1a>
 272:	1e f4       	brtc	.+6      	; 0x27a <__addsf3+0x1e>
 274:	cb c0       	rjmp	.+406    	; 0x40c <__fp_nan>
 276:	0e f4       	brtc	.+2      	; 0x27a <__addsf3+0x1e>
 278:	e0 95       	com	r30
 27a:	e7 fb       	bst	r30, 7
 27c:	c1 c0       	rjmp	.+386    	; 0x400 <__fp_inf>

0000027e <__addsf3x>:
 27e:	e9 2f       	mov	r30, r25
 280:	e7 d0       	rcall	.+462    	; 0x450 <__fp_split3>
 282:	80 f3       	brcs	.-32     	; 0x264 <__addsf3+0x8>
 284:	ba 17       	cp	r27, r26
 286:	62 07       	cpc	r22, r18
 288:	73 07       	cpc	r23, r19
 28a:	84 07       	cpc	r24, r20
 28c:	95 07       	cpc	r25, r21
 28e:	18 f0       	brcs	.+6      	; 0x296 <__addsf3x+0x18>
 290:	71 f4       	brne	.+28     	; 0x2ae <__addsf3x+0x30>
 292:	9e f5       	brtc	.+102    	; 0x2fa <__addsf3x+0x7c>
 294:	ff c0       	rjmp	.+510    	; 0x494 <__fp_zero>
 296:	0e f4       	brtc	.+2      	; 0x29a <__addsf3x+0x1c>
 298:	e0 95       	com	r30
 29a:	0b 2e       	mov	r0, r27
 29c:	ba 2f       	mov	r27, r26
 29e:	a0 2d       	mov	r26, r0
 2a0:	0b 01       	movw	r0, r22
 2a2:	b9 01       	movw	r22, r18
 2a4:	90 01       	movw	r18, r0
 2a6:	0c 01       	movw	r0, r24
 2a8:	ca 01       	movw	r24, r20
 2aa:	a0 01       	movw	r20, r0
 2ac:	11 24       	eor	r1, r1
 2ae:	ff 27       	eor	r31, r31
 2b0:	59 1b       	sub	r21, r25
 2b2:	99 f0       	breq	.+38     	; 0x2da <__addsf3x+0x5c>
 2b4:	59 3f       	cpi	r21, 0xF9	; 249
 2b6:	50 f4       	brcc	.+20     	; 0x2cc <__addsf3x+0x4e>
 2b8:	50 3e       	cpi	r21, 0xE0	; 224
 2ba:	68 f1       	brcs	.+90     	; 0x316 <__addsf3x+0x98>
 2bc:	1a 16       	cp	r1, r26
 2be:	f0 40       	sbci	r31, 0x00	; 0
 2c0:	a2 2f       	mov	r26, r18
 2c2:	23 2f       	mov	r18, r19
 2c4:	34 2f       	mov	r19, r20
 2c6:	44 27       	eor	r20, r20
 2c8:	58 5f       	subi	r21, 0xF8	; 248
 2ca:	f3 cf       	rjmp	.-26     	; 0x2b2 <__addsf3x+0x34>
 2cc:	46 95       	lsr	r20
 2ce:	37 95       	ror	r19
 2d0:	27 95       	ror	r18
 2d2:	a7 95       	ror	r26
 2d4:	f0 40       	sbci	r31, 0x00	; 0
 2d6:	53 95       	inc	r21
 2d8:	c9 f7       	brne	.-14     	; 0x2cc <__addsf3x+0x4e>
 2da:	7e f4       	brtc	.+30     	; 0x2fa <__addsf3x+0x7c>
 2dc:	1f 16       	cp	r1, r31
 2de:	ba 0b       	sbc	r27, r26
 2e0:	62 0b       	sbc	r22, r18
 2e2:	73 0b       	sbc	r23, r19
 2e4:	84 0b       	sbc	r24, r20
 2e6:	ba f0       	brmi	.+46     	; 0x316 <__addsf3x+0x98>
 2e8:	91 50       	subi	r25, 0x01	; 1
 2ea:	a1 f0       	breq	.+40     	; 0x314 <__addsf3x+0x96>
 2ec:	ff 0f       	add	r31, r31
 2ee:	bb 1f       	adc	r27, r27
 2f0:	66 1f       	adc	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	88 1f       	adc	r24, r24
 2f6:	c2 f7       	brpl	.-16     	; 0x2e8 <__addsf3x+0x6a>
 2f8:	0e c0       	rjmp	.+28     	; 0x316 <__addsf3x+0x98>
 2fa:	ba 0f       	add	r27, r26
 2fc:	62 1f       	adc	r22, r18
 2fe:	73 1f       	adc	r23, r19
 300:	84 1f       	adc	r24, r20
 302:	48 f4       	brcc	.+18     	; 0x316 <__addsf3x+0x98>
 304:	87 95       	ror	r24
 306:	77 95       	ror	r23
 308:	67 95       	ror	r22
 30a:	b7 95       	ror	r27
 30c:	f7 95       	ror	r31
 30e:	9e 3f       	cpi	r25, 0xFE	; 254
 310:	08 f0       	brcs	.+2      	; 0x314 <__addsf3x+0x96>
 312:	b3 cf       	rjmp	.-154    	; 0x27a <__addsf3+0x1e>
 314:	93 95       	inc	r25
 316:	88 0f       	add	r24, r24
 318:	08 f0       	brcs	.+2      	; 0x31c <__addsf3x+0x9e>
 31a:	99 27       	eor	r25, r25
 31c:	ee 0f       	add	r30, r30
 31e:	97 95       	ror	r25
 320:	87 95       	ror	r24
 322:	08 95       	ret

00000324 <__fixsfsi>:
 324:	04 d0       	rcall	.+8      	; 0x32e <__fixunssfsi>
 326:	68 94       	set
 328:	b1 11       	cpse	r27, r1
 32a:	b5 c0       	rjmp	.+362    	; 0x496 <__fp_szero>
 32c:	08 95       	ret

0000032e <__fixunssfsi>:
 32e:	98 d0       	rcall	.+304    	; 0x460 <__fp_splitA>
 330:	88 f0       	brcs	.+34     	; 0x354 <__fixunssfsi+0x26>
 332:	9f 57       	subi	r25, 0x7F	; 127
 334:	90 f0       	brcs	.+36     	; 0x35a <__fixunssfsi+0x2c>
 336:	b9 2f       	mov	r27, r25
 338:	99 27       	eor	r25, r25
 33a:	b7 51       	subi	r27, 0x17	; 23
 33c:	a0 f0       	brcs	.+40     	; 0x366 <__fixunssfsi+0x38>
 33e:	d1 f0       	breq	.+52     	; 0x374 <__fixunssfsi+0x46>
 340:	66 0f       	add	r22, r22
 342:	77 1f       	adc	r23, r23
 344:	88 1f       	adc	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	1a f0       	brmi	.+6      	; 0x350 <__fixunssfsi+0x22>
 34a:	ba 95       	dec	r27
 34c:	c9 f7       	brne	.-14     	; 0x340 <__fixunssfsi+0x12>
 34e:	12 c0       	rjmp	.+36     	; 0x374 <__fixunssfsi+0x46>
 350:	b1 30       	cpi	r27, 0x01	; 1
 352:	81 f0       	breq	.+32     	; 0x374 <__fixunssfsi+0x46>
 354:	9f d0       	rcall	.+318    	; 0x494 <__fp_zero>
 356:	b1 e0       	ldi	r27, 0x01	; 1
 358:	08 95       	ret
 35a:	9c c0       	rjmp	.+312    	; 0x494 <__fp_zero>
 35c:	67 2f       	mov	r22, r23
 35e:	78 2f       	mov	r23, r24
 360:	88 27       	eor	r24, r24
 362:	b8 5f       	subi	r27, 0xF8	; 248
 364:	39 f0       	breq	.+14     	; 0x374 <__fixunssfsi+0x46>
 366:	b9 3f       	cpi	r27, 0xF9	; 249
 368:	cc f3       	brlt	.-14     	; 0x35c <__fixunssfsi+0x2e>
 36a:	86 95       	lsr	r24
 36c:	77 95       	ror	r23
 36e:	67 95       	ror	r22
 370:	b3 95       	inc	r27
 372:	d9 f7       	brne	.-10     	; 0x36a <__fixunssfsi+0x3c>
 374:	3e f4       	brtc	.+14     	; 0x384 <__fixunssfsi+0x56>
 376:	90 95       	com	r25
 378:	80 95       	com	r24
 37a:	70 95       	com	r23
 37c:	61 95       	neg	r22
 37e:	7f 4f       	sbci	r23, 0xFF	; 255
 380:	8f 4f       	sbci	r24, 0xFF	; 255
 382:	9f 4f       	sbci	r25, 0xFF	; 255
 384:	08 95       	ret

00000386 <__floatunsisf>:
 386:	e8 94       	clt
 388:	09 c0       	rjmp	.+18     	; 0x39c <__floatsisf+0x12>

0000038a <__floatsisf>:
 38a:	97 fb       	bst	r25, 7
 38c:	3e f4       	brtc	.+14     	; 0x39c <__floatsisf+0x12>
 38e:	90 95       	com	r25
 390:	80 95       	com	r24
 392:	70 95       	com	r23
 394:	61 95       	neg	r22
 396:	7f 4f       	sbci	r23, 0xFF	; 255
 398:	8f 4f       	sbci	r24, 0xFF	; 255
 39a:	9f 4f       	sbci	r25, 0xFF	; 255
 39c:	99 23       	and	r25, r25
 39e:	a9 f0       	breq	.+42     	; 0x3ca <__floatsisf+0x40>
 3a0:	f9 2f       	mov	r31, r25
 3a2:	96 e9       	ldi	r25, 0x96	; 150
 3a4:	bb 27       	eor	r27, r27
 3a6:	93 95       	inc	r25
 3a8:	f6 95       	lsr	r31
 3aa:	87 95       	ror	r24
 3ac:	77 95       	ror	r23
 3ae:	67 95       	ror	r22
 3b0:	b7 95       	ror	r27
 3b2:	f1 11       	cpse	r31, r1
 3b4:	f8 cf       	rjmp	.-16     	; 0x3a6 <__floatsisf+0x1c>
 3b6:	fa f4       	brpl	.+62     	; 0x3f6 <__floatsisf+0x6c>
 3b8:	bb 0f       	add	r27, r27
 3ba:	11 f4       	brne	.+4      	; 0x3c0 <__floatsisf+0x36>
 3bc:	60 ff       	sbrs	r22, 0
 3be:	1b c0       	rjmp	.+54     	; 0x3f6 <__floatsisf+0x6c>
 3c0:	6f 5f       	subi	r22, 0xFF	; 255
 3c2:	7f 4f       	sbci	r23, 0xFF	; 255
 3c4:	8f 4f       	sbci	r24, 0xFF	; 255
 3c6:	9f 4f       	sbci	r25, 0xFF	; 255
 3c8:	16 c0       	rjmp	.+44     	; 0x3f6 <__floatsisf+0x6c>
 3ca:	88 23       	and	r24, r24
 3cc:	11 f0       	breq	.+4      	; 0x3d2 <__floatsisf+0x48>
 3ce:	96 e9       	ldi	r25, 0x96	; 150
 3d0:	11 c0       	rjmp	.+34     	; 0x3f4 <__floatsisf+0x6a>
 3d2:	77 23       	and	r23, r23
 3d4:	21 f0       	breq	.+8      	; 0x3de <__floatsisf+0x54>
 3d6:	9e e8       	ldi	r25, 0x8E	; 142
 3d8:	87 2f       	mov	r24, r23
 3da:	76 2f       	mov	r23, r22
 3dc:	05 c0       	rjmp	.+10     	; 0x3e8 <__floatsisf+0x5e>
 3de:	66 23       	and	r22, r22
 3e0:	71 f0       	breq	.+28     	; 0x3fe <__floatsisf+0x74>
 3e2:	96 e8       	ldi	r25, 0x86	; 134
 3e4:	86 2f       	mov	r24, r22
 3e6:	70 e0       	ldi	r23, 0x00	; 0
 3e8:	60 e0       	ldi	r22, 0x00	; 0
 3ea:	2a f0       	brmi	.+10     	; 0x3f6 <__floatsisf+0x6c>
 3ec:	9a 95       	dec	r25
 3ee:	66 0f       	add	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	da f7       	brpl	.-10     	; 0x3ec <__floatsisf+0x62>
 3f6:	88 0f       	add	r24, r24
 3f8:	96 95       	lsr	r25
 3fa:	87 95       	ror	r24
 3fc:	97 f9       	bld	r25, 7
 3fe:	08 95       	ret

00000400 <__fp_inf>:
 400:	97 f9       	bld	r25, 7
 402:	9f 67       	ori	r25, 0x7F	; 127
 404:	80 e8       	ldi	r24, 0x80	; 128
 406:	70 e0       	ldi	r23, 0x00	; 0
 408:	60 e0       	ldi	r22, 0x00	; 0
 40a:	08 95       	ret

0000040c <__fp_nan>:
 40c:	9f ef       	ldi	r25, 0xFF	; 255
 40e:	80 ec       	ldi	r24, 0xC0	; 192
 410:	08 95       	ret

00000412 <__fp_pscA>:
 412:	00 24       	eor	r0, r0
 414:	0a 94       	dec	r0
 416:	16 16       	cp	r1, r22
 418:	17 06       	cpc	r1, r23
 41a:	18 06       	cpc	r1, r24
 41c:	09 06       	cpc	r0, r25
 41e:	08 95       	ret

00000420 <__fp_pscB>:
 420:	00 24       	eor	r0, r0
 422:	0a 94       	dec	r0
 424:	12 16       	cp	r1, r18
 426:	13 06       	cpc	r1, r19
 428:	14 06       	cpc	r1, r20
 42a:	05 06       	cpc	r0, r21
 42c:	08 95       	ret

0000042e <__fp_round>:
 42e:	09 2e       	mov	r0, r25
 430:	03 94       	inc	r0
 432:	00 0c       	add	r0, r0
 434:	11 f4       	brne	.+4      	; 0x43a <__fp_round+0xc>
 436:	88 23       	and	r24, r24
 438:	52 f0       	brmi	.+20     	; 0x44e <__fp_round+0x20>
 43a:	bb 0f       	add	r27, r27
 43c:	40 f4       	brcc	.+16     	; 0x44e <__fp_round+0x20>
 43e:	bf 2b       	or	r27, r31
 440:	11 f4       	brne	.+4      	; 0x446 <__fp_round+0x18>
 442:	60 ff       	sbrs	r22, 0
 444:	04 c0       	rjmp	.+8      	; 0x44e <__fp_round+0x20>
 446:	6f 5f       	subi	r22, 0xFF	; 255
 448:	7f 4f       	sbci	r23, 0xFF	; 255
 44a:	8f 4f       	sbci	r24, 0xFF	; 255
 44c:	9f 4f       	sbci	r25, 0xFF	; 255
 44e:	08 95       	ret

00000450 <__fp_split3>:
 450:	57 fd       	sbrc	r21, 7
 452:	90 58       	subi	r25, 0x80	; 128
 454:	44 0f       	add	r20, r20
 456:	55 1f       	adc	r21, r21
 458:	59 f0       	breq	.+22     	; 0x470 <__fp_splitA+0x10>
 45a:	5f 3f       	cpi	r21, 0xFF	; 255
 45c:	71 f0       	breq	.+28     	; 0x47a <__fp_splitA+0x1a>
 45e:	47 95       	ror	r20

00000460 <__fp_splitA>:
 460:	88 0f       	add	r24, r24
 462:	97 fb       	bst	r25, 7
 464:	99 1f       	adc	r25, r25
 466:	61 f0       	breq	.+24     	; 0x480 <__fp_splitA+0x20>
 468:	9f 3f       	cpi	r25, 0xFF	; 255
 46a:	79 f0       	breq	.+30     	; 0x48a <__fp_splitA+0x2a>
 46c:	87 95       	ror	r24
 46e:	08 95       	ret
 470:	12 16       	cp	r1, r18
 472:	13 06       	cpc	r1, r19
 474:	14 06       	cpc	r1, r20
 476:	55 1f       	adc	r21, r21
 478:	f2 cf       	rjmp	.-28     	; 0x45e <__fp_split3+0xe>
 47a:	46 95       	lsr	r20
 47c:	f1 df       	rcall	.-30     	; 0x460 <__fp_splitA>
 47e:	08 c0       	rjmp	.+16     	; 0x490 <__fp_splitA+0x30>
 480:	16 16       	cp	r1, r22
 482:	17 06       	cpc	r1, r23
 484:	18 06       	cpc	r1, r24
 486:	99 1f       	adc	r25, r25
 488:	f1 cf       	rjmp	.-30     	; 0x46c <__fp_splitA+0xc>
 48a:	86 95       	lsr	r24
 48c:	71 05       	cpc	r23, r1
 48e:	61 05       	cpc	r22, r1
 490:	08 94       	sec
 492:	08 95       	ret

00000494 <__fp_zero>:
 494:	e8 94       	clt

00000496 <__fp_szero>:
 496:	bb 27       	eor	r27, r27
 498:	66 27       	eor	r22, r22
 49a:	77 27       	eor	r23, r23
 49c:	cb 01       	movw	r24, r22
 49e:	97 f9       	bld	r25, 7
 4a0:	08 95       	ret

000004a2 <__mulsf3>:
 4a2:	0b d0       	rcall	.+22     	; 0x4ba <__mulsf3x>
 4a4:	c4 cf       	rjmp	.-120    	; 0x42e <__fp_round>
 4a6:	b5 df       	rcall	.-150    	; 0x412 <__fp_pscA>
 4a8:	28 f0       	brcs	.+10     	; 0x4b4 <__mulsf3+0x12>
 4aa:	ba df       	rcall	.-140    	; 0x420 <__fp_pscB>
 4ac:	18 f0       	brcs	.+6      	; 0x4b4 <__mulsf3+0x12>
 4ae:	95 23       	and	r25, r21
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <__mulsf3+0x12>
 4b2:	a6 cf       	rjmp	.-180    	; 0x400 <__fp_inf>
 4b4:	ab cf       	rjmp	.-170    	; 0x40c <__fp_nan>
 4b6:	11 24       	eor	r1, r1
 4b8:	ee cf       	rjmp	.-36     	; 0x496 <__fp_szero>

000004ba <__mulsf3x>:
 4ba:	ca df       	rcall	.-108    	; 0x450 <__fp_split3>
 4bc:	a0 f3       	brcs	.-24     	; 0x4a6 <__mulsf3+0x4>

000004be <__mulsf3_pse>:
 4be:	95 9f       	mul	r25, r21
 4c0:	d1 f3       	breq	.-12     	; 0x4b6 <__mulsf3+0x14>
 4c2:	95 0f       	add	r25, r21
 4c4:	50 e0       	ldi	r21, 0x00	; 0
 4c6:	55 1f       	adc	r21, r21
 4c8:	62 9f       	mul	r22, r18
 4ca:	f0 01       	movw	r30, r0
 4cc:	72 9f       	mul	r23, r18
 4ce:	bb 27       	eor	r27, r27
 4d0:	f0 0d       	add	r31, r0
 4d2:	b1 1d       	adc	r27, r1
 4d4:	63 9f       	mul	r22, r19
 4d6:	aa 27       	eor	r26, r26
 4d8:	f0 0d       	add	r31, r0
 4da:	b1 1d       	adc	r27, r1
 4dc:	aa 1f       	adc	r26, r26
 4de:	64 9f       	mul	r22, r20
 4e0:	66 27       	eor	r22, r22
 4e2:	b0 0d       	add	r27, r0
 4e4:	a1 1d       	adc	r26, r1
 4e6:	66 1f       	adc	r22, r22
 4e8:	82 9f       	mul	r24, r18
 4ea:	22 27       	eor	r18, r18
 4ec:	b0 0d       	add	r27, r0
 4ee:	a1 1d       	adc	r26, r1
 4f0:	62 1f       	adc	r22, r18
 4f2:	73 9f       	mul	r23, r19
 4f4:	b0 0d       	add	r27, r0
 4f6:	a1 1d       	adc	r26, r1
 4f8:	62 1f       	adc	r22, r18
 4fa:	83 9f       	mul	r24, r19
 4fc:	a0 0d       	add	r26, r0
 4fe:	61 1d       	adc	r22, r1
 500:	22 1f       	adc	r18, r18
 502:	74 9f       	mul	r23, r20
 504:	33 27       	eor	r19, r19
 506:	a0 0d       	add	r26, r0
 508:	61 1d       	adc	r22, r1
 50a:	23 1f       	adc	r18, r19
 50c:	84 9f       	mul	r24, r20
 50e:	60 0d       	add	r22, r0
 510:	21 1d       	adc	r18, r1
 512:	82 2f       	mov	r24, r18
 514:	76 2f       	mov	r23, r22
 516:	6a 2f       	mov	r22, r26
 518:	11 24       	eor	r1, r1
 51a:	9f 57       	subi	r25, 0x7F	; 127
 51c:	50 40       	sbci	r21, 0x00	; 0
 51e:	8a f0       	brmi	.+34     	; 0x542 <__stack+0x43>
 520:	e1 f0       	breq	.+56     	; 0x55a <__stack+0x5b>
 522:	88 23       	and	r24, r24
 524:	4a f0       	brmi	.+18     	; 0x538 <__stack+0x39>
 526:	ee 0f       	add	r30, r30
 528:	ff 1f       	adc	r31, r31
 52a:	bb 1f       	adc	r27, r27
 52c:	66 1f       	adc	r22, r22
 52e:	77 1f       	adc	r23, r23
 530:	88 1f       	adc	r24, r24
 532:	91 50       	subi	r25, 0x01	; 1
 534:	50 40       	sbci	r21, 0x00	; 0
 536:	a9 f7       	brne	.-22     	; 0x522 <__stack+0x23>
 538:	9e 3f       	cpi	r25, 0xFE	; 254
 53a:	51 05       	cpc	r21, r1
 53c:	70 f0       	brcs	.+28     	; 0x55a <__stack+0x5b>
 53e:	60 cf       	rjmp	.-320    	; 0x400 <__fp_inf>
 540:	aa cf       	rjmp	.-172    	; 0x496 <__fp_szero>
 542:	5f 3f       	cpi	r21, 0xFF	; 255
 544:	ec f3       	brlt	.-6      	; 0x540 <__stack+0x41>
 546:	98 3e       	cpi	r25, 0xE8	; 232
 548:	dc f3       	brlt	.-10     	; 0x540 <__stack+0x41>
 54a:	86 95       	lsr	r24
 54c:	77 95       	ror	r23
 54e:	67 95       	ror	r22
 550:	b7 95       	ror	r27
 552:	f7 95       	ror	r31
 554:	e7 95       	ror	r30
 556:	9f 5f       	subi	r25, 0xFF	; 255
 558:	c1 f7       	brne	.-16     	; 0x54a <__stack+0x4b>
 55a:	fe 2b       	or	r31, r30
 55c:	88 0f       	add	r24, r24
 55e:	91 1d       	adc	r25, r1
 560:	96 95       	lsr	r25
 562:	87 95       	ror	r24
 564:	97 f9       	bld	r25, 7
 566:	08 95       	ret

00000568 <sin>:
 568:	9f 93       	push	r25
 56a:	05 d0       	rcall	.+10     	; 0x576 <__fp_rempio2>
 56c:	0f 90       	pop	r0
 56e:	07 fc       	sbrc	r0, 7
 570:	ee 5f       	subi	r30, 0xFE	; 254
 572:	28 c0       	rjmp	.+80     	; 0x5c4 <__fp_sinus>
 574:	4b cf       	rjmp	.-362    	; 0x40c <__fp_nan>

00000576 <__fp_rempio2>:
 576:	74 df       	rcall	.-280    	; 0x460 <__fp_splitA>
 578:	e8 f3       	brcs	.-6      	; 0x574 <sin+0xc>
 57a:	e8 94       	clt
 57c:	e0 e0       	ldi	r30, 0x00	; 0
 57e:	bb 27       	eor	r27, r27
 580:	9f 57       	subi	r25, 0x7F	; 127
 582:	f0 f0       	brcs	.+60     	; 0x5c0 <__fp_rempio2+0x4a>
 584:	2a ed       	ldi	r18, 0xDA	; 218
 586:	3f e0       	ldi	r19, 0x0F	; 15
 588:	49 ec       	ldi	r20, 0xC9	; 201
 58a:	06 c0       	rjmp	.+12     	; 0x598 <__fp_rempio2+0x22>
 58c:	ee 0f       	add	r30, r30
 58e:	bb 0f       	add	r27, r27
 590:	66 1f       	adc	r22, r22
 592:	77 1f       	adc	r23, r23
 594:	88 1f       	adc	r24, r24
 596:	28 f0       	brcs	.+10     	; 0x5a2 <__fp_rempio2+0x2c>
 598:	b2 3a       	cpi	r27, 0xA2	; 162
 59a:	62 07       	cpc	r22, r18
 59c:	73 07       	cpc	r23, r19
 59e:	84 07       	cpc	r24, r20
 5a0:	28 f0       	brcs	.+10     	; 0x5ac <__fp_rempio2+0x36>
 5a2:	b2 5a       	subi	r27, 0xA2	; 162
 5a4:	62 0b       	sbc	r22, r18
 5a6:	73 0b       	sbc	r23, r19
 5a8:	84 0b       	sbc	r24, r20
 5aa:	e3 95       	inc	r30
 5ac:	9a 95       	dec	r25
 5ae:	72 f7       	brpl	.-36     	; 0x58c <__fp_rempio2+0x16>
 5b0:	80 38       	cpi	r24, 0x80	; 128
 5b2:	30 f4       	brcc	.+12     	; 0x5c0 <__fp_rempio2+0x4a>
 5b4:	9a 95       	dec	r25
 5b6:	bb 0f       	add	r27, r27
 5b8:	66 1f       	adc	r22, r22
 5ba:	77 1f       	adc	r23, r23
 5bc:	88 1f       	adc	r24, r24
 5be:	d2 f7       	brpl	.-12     	; 0x5b4 <__fp_rempio2+0x3e>
 5c0:	90 48       	sbci	r25, 0x80	; 128
 5c2:	13 c0       	rjmp	.+38     	; 0x5ea <__fp_mpack_finite>

000005c4 <__fp_sinus>:
 5c4:	ef 93       	push	r30
 5c6:	e0 ff       	sbrs	r30, 0
 5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <__fp_sinus+0x12>
 5ca:	a2 ea       	ldi	r26, 0xA2	; 162
 5cc:	2a ed       	ldi	r18, 0xDA	; 218
 5ce:	3f e0       	ldi	r19, 0x0F	; 15
 5d0:	49 ec       	ldi	r20, 0xC9	; 201
 5d2:	5f eb       	ldi	r21, 0xBF	; 191
 5d4:	54 de       	rcall	.-856    	; 0x27e <__addsf3x>
 5d6:	2b df       	rcall	.-426    	; 0x42e <__fp_round>
 5d8:	0f 90       	pop	r0
 5da:	03 94       	inc	r0
 5dc:	01 fc       	sbrc	r0, 1
 5de:	90 58       	subi	r25, 0x80	; 128
 5e0:	e4 e3       	ldi	r30, 0x34	; 52
 5e2:	f0 e0       	ldi	r31, 0x00	; 0
 5e4:	0e c0       	rjmp	.+28     	; 0x602 <__fp_powsodd>

000005e6 <__fp_mpack>:
 5e6:	9f 3f       	cpi	r25, 0xFF	; 255
 5e8:	31 f0       	breq	.+12     	; 0x5f6 <__fp_mpack_finite+0xc>

000005ea <__fp_mpack_finite>:
 5ea:	91 50       	subi	r25, 0x01	; 1
 5ec:	20 f4       	brcc	.+8      	; 0x5f6 <__fp_mpack_finite+0xc>
 5ee:	87 95       	ror	r24
 5f0:	77 95       	ror	r23
 5f2:	67 95       	ror	r22
 5f4:	b7 95       	ror	r27
 5f6:	88 0f       	add	r24, r24
 5f8:	91 1d       	adc	r25, r1
 5fa:	96 95       	lsr	r25
 5fc:	87 95       	ror	r24
 5fe:	97 f9       	bld	r25, 7
 600:	08 95       	ret

00000602 <__fp_powsodd>:
 602:	9f 93       	push	r25
 604:	8f 93       	push	r24
 606:	7f 93       	push	r23
 608:	6f 93       	push	r22
 60a:	ff 93       	push	r31
 60c:	ef 93       	push	r30
 60e:	9b 01       	movw	r18, r22
 610:	ac 01       	movw	r20, r24
 612:	47 df       	rcall	.-370    	; 0x4a2 <__mulsf3>
 614:	ef 91       	pop	r30
 616:	ff 91       	pop	r31
 618:	05 d0       	rcall	.+10     	; 0x624 <__fp_powser>
 61a:	2f 91       	pop	r18
 61c:	3f 91       	pop	r19
 61e:	4f 91       	pop	r20
 620:	5f 91       	pop	r21
 622:	3f cf       	rjmp	.-386    	; 0x4a2 <__mulsf3>

00000624 <__fp_powser>:
 624:	df 93       	push	r29
 626:	cf 93       	push	r28
 628:	1f 93       	push	r17
 62a:	0f 93       	push	r16
 62c:	ff 92       	push	r15
 62e:	ef 92       	push	r14
 630:	df 92       	push	r13
 632:	7b 01       	movw	r14, r22
 634:	8c 01       	movw	r16, r24
 636:	68 94       	set
 638:	05 c0       	rjmp	.+10     	; 0x644 <__fp_powser+0x20>
 63a:	da 2e       	mov	r13, r26
 63c:	ef 01       	movw	r28, r30
 63e:	3d df       	rcall	.-390    	; 0x4ba <__mulsf3x>
 640:	fe 01       	movw	r30, r28
 642:	e8 94       	clt
 644:	a5 91       	lpm	r26, Z+
 646:	25 91       	lpm	r18, Z+
 648:	35 91       	lpm	r19, Z+
 64a:	45 91       	lpm	r20, Z+
 64c:	55 91       	lpm	r21, Z+
 64e:	ae f3       	brts	.-22     	; 0x63a <__fp_powser+0x16>
 650:	ef 01       	movw	r28, r30
 652:	15 de       	rcall	.-982    	; 0x27e <__addsf3x>
 654:	fe 01       	movw	r30, r28
 656:	97 01       	movw	r18, r14
 658:	a8 01       	movw	r20, r16
 65a:	da 94       	dec	r13
 65c:	79 f7       	brne	.-34     	; 0x63c <__fp_powser+0x18>
 65e:	df 90       	pop	r13
 660:	ef 90       	pop	r14
 662:	ff 90       	pop	r15
 664:	0f 91       	pop	r16
 666:	1f 91       	pop	r17
 668:	cf 91       	pop	r28
 66a:	df 91       	pop	r29
 66c:	08 95       	ret

0000066e <_exit>:
 66e:	f8 94       	cli

00000670 <__stop_program>:
 670:	ff cf       	rjmp	.-2      	; 0x670 <__stop_program>
